version: '3.3'

services:

  ente-creditore:
    image: 'ente-creditore:latest'
    build:
      context: ./ente-creditore
    ports:
      - "8082:8082"
    container_name: ente-creditore
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/entec
      - SPRING_DATASOURCE_USERNAME=postgres-user-test
      - SPRING_DATASOURCE_PASSWORD=postgres-pwd-test
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
  
  service-managment:
    image: 'service-managment:latest'
    build:
      context: ./service-managment
    ports:
      - "8083:8083"
    container_name: service-managment
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sermng
      - SPRING_DATASOURCE_USERNAME=postgres-user-test
      - SPRING_DATASOURCE_PASSWORD=postgres-pwd-test
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_CORS_ORIGINS=http://localhost:8083,http://service-managment:8083
  
  upload-payments:
    image: 'upload-payments:latest'
    build:
      context: ./upload-payments
    ports:
      - "8084:8084"
    container_name: upload-payments
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - ENV=loc
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/updpay
      - SPRING_DATASOURCE_USERNAME=postgres-user-test
      - SPRING_DATASOURCE_PASSWORD=postgres-pwd-test
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_CORS_ORIGINS=http://localhost:8083,http://upload-payments:8084
      - QUEUE_NAME=job_queue
      - JMS_SERVICE_BUS_CONNECTION_STRING=connection-string
      - JMS_SERVICE_BUS_IDLE_TIMEOUT=1800000
      - JMS_SERVICE_BUS_PRICING=standard
      - ENV=dev
  
  auth-spid:
    build:
      context: ./auth-spid
      dockerfile: ./Dockerfile
    environment:
      - NODE_ENV=dev
      - REDIS_URL=redis://redis
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    expose:
      - "3000"
    ports:
      - "3000:3000"
    image: node:10.14.2-alpine
    working_dir: /usr/src/app
    command: ["yarn", "dev"]
    depends_on:
      - spid-testenv2
    

  spid-testenv2:
    image: italia/spid-testenv2:1.1.0
    ports:
      - "8088:8088"
    volumes:
      - "./auth-spid/conf-testenv/config.yaml:/app/conf/config.yaml"
      - "./auth-spid/conf-testenv/users.json:/app/conf/users.json"
    depends_on:
      - redis

  
  redis:
    image: wodby/redis:3.2-2.1.5
    environment:
      REDIS_TIMEOUT: 300
      REDIS_TCP_KEEPALIVE: 60
      REDIS_MAXMEMORY: 182m
    
          
  postgres:
    image: 'postgres'
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - "./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh"
    environment:
      - POSTGRES_USER=postgres-user-test
      - POSTGRES_PASSWORD=postgres-pwd-test
      
  api-gateway:
    image: nginx
    ports:
      - "8000:8080"
    volumes:
      - "./api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./api-gateway/tokenPolicy.js:/home/tokenPolicy.js:ro"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
      
