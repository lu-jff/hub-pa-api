load_module modules/ngx_http_js_module.so;

events {
    worker_connections 1024;
}

http {
    js_import /home/tokenPolicy.js;

    server {
        listen [::]:8080 ipv6only=off;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
 
        location /auth/ {
            proxy_pass http://hub-spid-login-ms:8080/;
        }

        location /microservice/ {
          # Validate the Authenticaiton token before calling microservice
          auth_request /token-introspection;
          proxy_pass http://microservice:8081/;
        }

        location /ente/ {
          # Validate the Authenticaiton token before calling microservice
          auth_request /token-introspection;
          proxy_pass http://ente-creditore:8082/ente/;
        }

        location /ente {
          # Validate the Authenticaiton token before calling microservice
          auth_request /token-introspection;
          proxy_pass http://ente-creditore:8082;
        }

        # token introspection is based on a token policy, e.g. a JS function
        # 'tokenPolicy' which makes a sub-request to Auth Microservice 
        # introspect endpoint and analyzes the result.
        # Request is modeled in token-instrospection-request location block
        location = /token-introspection {
          internal;
          js_content tokenPolicy;
        }

        location /token-introspection-request {
          internal;
          proxy_method POST;
          proxy_pass http://auth-spid:3000/introspect;
          proxy_pass_request_body off;
          proxy_set_header Content-Length "";
          proxy_set_header X-Original-URI $request_uri;
        }
    }
}